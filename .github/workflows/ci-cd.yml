name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Start Linting
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out

  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true

      - name: Run integration tests
        run: go test -v -tags=integration ./...

  test-e2e:
    name: End-to-end Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true

      - name: Create .env.test file
        run: |
          cat << EOF > tests/e2e/.env.test
          # App server
          SERVER_HOST=127.0.0.1
          SERVER_PORT=8000
          
          # Metrics server
          METRICS_HOST=127.0.0.1
          METRICS_PORT=8081
          
          # PostgreSQL
          POSTGRES_HOST=127.0.0.1
          POSTGRES_PORT=5432
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=postgres
          POSTGRES_DB=accounting_test
          
          # compdf.com file converter API
          CONVERT_API_PUBLIC_KEY=${{ secrets.CONVERT_API_PUBLIC_KEY }}
          CONVERT_API_SECRET_KEY=${{ secrets.CONVERT_API_SECRET_KEY }}
          
          # Yandex Mail SMTP creds
          SMTP_HOST=smtp.yandex.com
          SMTP_PORT=465
          SMTP_EMAIL=${{ secrets.SMTP_EMAIL }}
          SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
          EOF

      - name: Run e2e tests
        run: go test -v -tags=e2e ./tests/e2e/ -run "TestUploadEmailsFile"

      - name: Run e2e tests
        run: go test -v -tags=e2e ./tests/e2e/ -run "TestUploadPayersFile"


